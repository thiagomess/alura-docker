#declara a versao do docker-compose
version: '3.8'
#irá criar os serviços
services: 
    #cria um serviço chamado nginx
    nginx:
        #Irá fazer o build no caminho:
        build: 
            dockerfile: ./docker/nginx.dockerfile
            context: .
        #Irá dar o nome da imagem após buildado
        image: thiagomess/nginx
        container_name: nginx
        #Irá exibir a porta 8080 fazendo referencia a porta 80 do nginx
        ports:
            - "8080:80"
        #Define a rede
        networks: 
            - production-network
        #Só será criado apos os serviços abaixo listado
        depends_on: 
            - "node1"
            - "node2"
            - "node3"
    #Cria ums serviço chamado mongodb
    mongodb:
        #Como nao será buildado, irá usar a imagem oficial
        image: mongo
        networks:
            - production-network

    #Irá criar 3 serviços nodes, chamado node1, node2 e node3
    node1:
        build: 
            dockerfile: ./docker/alura-books.dockerfile
            context: .
        image: thiagomess/alura-books
        container_name: alura-books1
        ports:
            - "3000"
        networks: 
            - production-network
        #Irá dependender da criação do serviço mongodb para ser criado
        depends_on: 
            - "mongodb"

    node2:
        build: 
            dockerfile: ./docker/alura-books.dockerfile
            context: .
        image: thiagomess/alura-books
        container_name: alura-books2
        ports:
            - "3000"
        networks: 
            - production-network
        depends_on: 
            - "mongodb"

    node3:
        build: 
            dockerfile: ./docker/alura-books.dockerfile
            context: .
        image: thiagomess/alura-books
        container_name: alura-books3
        ports:
            - "3000"
        networks: 
            - production-network
        depends_on: 
            - "mongodb"
            
#Cria a rede
networks: 
    #Define o nome da rede como production-nertwork
    production-network:
        driver: bridge                    